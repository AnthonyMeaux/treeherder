env:
  global:
    - BROKER_URL='amqp://guest:guest@localhost:5672//'
    - DATABASE_URL='mysql://root@localhost/test_treeherder'
    - DATABASE_URL_RO='mysql://root@localhost/test_treeherder'
    - ELASTICSEARCH_URL='http://127.0.0.1:9200'
    - TREEHERDER_DJANGO_SECRET_KEY='secretkey-of-at-50-characters-to-pass-check-deploy'
matrix:
  include:
    # Each entry here creates another sub-job.

    # Job 3: Python Tests Chunk A
    - env: python-tests-main
      # Once mysql 5.6 is available on the container infra, we should switch back
      # to it for its faster boot time, by setting `sudo: false`.
      sudo: required
      dist: trusty
      language: python
      python: "2.7.11"
      cache:
        directories:
          - ~/venv
      services:
        - rabbitmq
        - memcached
      before_install:
        - env
        - which elasticsearch || true
        - mysql --version || true
        - mysqld --version || true
        - dpkg --status mysql || true
        - dpkg --status mysqld || true
        - dpkg --status elasticsearch || true
        - sudo service mysql status || true
        - sudo service elasticsearch status || true
        - curl https://cdn.mysql.com/Downloads/MySQL-5.6/mysql-community-server_5.6.32-1ubuntu14.04_amd64.deb -o ~/mysql-server.deb
        - curl https://cdn.mysql.com/Downloads/MySQL-5.6/mysql-common_5.6.32-1ubuntu14.04_amd64.deb -o ~/mysql-common.deb
        - curl https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/2.3.3/elasticsearch-2.3.3.deb -o ~/elasticsearch.deb
        - sudo dpkg -i ~/*.deb
        - sudo service mysql status || true
        - sudo service elasticsearch status || true
        - mysql --version || true
        - mysqld --version || true
        - sudo service elasticsearch restart
        - while ! curl localhost:9200 &>/dev/null; do sleep 1; done
        - echo -e '\n[mysqld]\nsql_mode="STRICT_ALL_TABLES"\n' | sudo tee -a /etc/mysql/my.cnf
        - sudo service mysql restart
        # Create a clean virtualenv rather than using the one given to us,
        # to work around: https://github.com/travis-ci/travis-ci/issues/4873
        - if [[ ! -f ~/venv/bin/activate ]]; then virtualenv -p python ~/venv; fi
        - source ~/venv/bin/activate
        - pip install --disable-pip-version-check --upgrade pip==8.1.1
        # Create the test database for `manage.py check --deploy`.
        - mysql -u root -e 'create database test_treeherder;'
      install:
        - pip install --disable-pip-version-check --require-hashes -r requirements/common.txt -r requirements/dev.txt
      script:
        # Several security features in settings.py (eg setting HSTS headers) are conditional on
        # 'https://' being in the site URL. In addition, we override the test environment's debug
        # value so the tests pass. The real environment variable will be checked during deployment.
        # Replace grep with `--fail-level WARNING` once we're using Django 1.10, since in
        # previous versions an exit code of 1 is hard-coded to only ERROR and above:
        # https://github.com/django/django/commit/287532588941d2941e19c4cd069bcbd8af889203
        # The pipefail ensures exceptions during the command still cause the step to fail.
        - set -o pipefail; SITE_URL='https://treeherder.dev' TREEHERDER_DEBUG='False' ./manage.py check --deploy 2>&1 | awk '/^WARNINGS/{err=1} {print} END{exit err}'
        - py.test tests/ --runslow --ignore=tests/e2e/ --ignore=tests/etl/ --ignore=tests/log_parser/ --ignore=tests/webapp/
